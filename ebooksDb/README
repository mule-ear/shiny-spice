v0.0.1
This is the start of the thing and works. 
What it does - is collects all of the files in the 'root' directory and all of the directories themselves 
and puts them into 3 tables - directories, books (which should be called files) and types (or extensions)

For the next version, I'll add a table for files. Then I need to figure out which ones are books - 1 type at a time
So, if it's an epub, try to extract the metadata and populate the books table
If it's a tgz or zip file - get the contents, etc

v0.0.2 - split the populate files table functionality off into it's own function - (although I should pass it the directory
		 CREATEd a new files table - which will be the base of this app - everything will derive from a file
		 Added logging, because this is now on github, no need for all that logging to take up space

  NEXT -> (small) - probably add config file and argparse
	(big) parse the zip and tgz files
  Still have to figure out how to parse each type of file (epub, mobi, pdf, ...) to extract metadata for the books table

v0.0.3 - added some argparse switches and logging.
	now you can specify the database name, set the log level, or change the default 'root' directory to search
	added some error checking (mostly for the arg_parse switches) enclosed the insert in a try/catch block
	cleaned up the logging a little to make it easier to read

v0.0.4 - added config file readerand config file, though I'll rename it before committing
	command line switches will override conf file values - tested
